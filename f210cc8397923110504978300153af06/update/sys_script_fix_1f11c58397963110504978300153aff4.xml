<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_fix">
    <sys_script_fix action="INSERT_OR_UPDATE">
        <before>false</before>
        <description>Update the existing table by splitting records (which are extended in more than one day) to new records which duration never extends more than one day.&#13;
Need to update the  System Properties &gt; Basic Configuration timezone to GMT</description>
        <name>Splitting records</name>
        <record_for_rollback>true</record_for_rollback>
        <script><![CDATA[// Define the table name
var tableName = 'x_1092147_outage_l_outage_table_lv'; // Replace with your actual table name

// Create a GlideRecord to iterate through the records
var gr = new GlideRecord(tableName);
gr.addQuery();
gr.query();

while (gr.next()) {
    var startDate = new GlideDateTime(gr.begin); 
    var endDate = new GlideDateTime(gr.end); 

    if (startDate.getLocalDate().equals(endDate.getLocalDate())) {
        // If start and end dates are the same day, no need to split
        continue;
    }
	
	// Delete the original record 	
	gr.deleteRecord();

    // Create separate records for each day
    while (!startDate.getLocalDate().equals(endDate.getLocalDate())) {
        var newRecord = new GlideRecord(tableName);
        newRecord.initialize();
		newRecord.number = gr.number;
		newRecord.type = gr.type;
		newRecord.configuration_item = gr.configuration_item;
		newRecord.primary_impacted_service = gr.primary_impacted_service;
        newRecord.begin = startDate; // Set the start date
		var newendDate = startDate.getDate() + ' 23:59:59'; // Set end date and time at 23:59:59
		newRecord.end = new GlideDateTime(newendDate);
		

        // Optionally, set other fields as needed

        newRecord.insert();

        // Increment the start date for the next record
        startDate.addDaysLocalTime(1);
		var newstartDate = startDate.getDate() + ' 00:00:00'; // Set start date and time at 17:00:00
		startDate = new GlideDateTime(newstartDate);
    }

    // Create the last record that spans the end of the incident
    var lastRecord = new GlideRecord(tableName);
    lastRecord.initialize();
	lastRecord.number = gr.number;
	lastRecord.type = gr.type;
	lastRecord.configuration_item = gr.configuration_item;
	lastRecord.primary_impacted_service = gr.primary_impacted_service;
    lastRecord.begin = startDate; // Set the start date
    lastRecord.end = endDate; // Set the end date to the end of the incident

    // Optionally, set other fields as needed

    lastRecord.insert();
}

// Update the duration field with newly calculated values
var ugr = new GlideRecord(tableName);
ugr.query();

while(ugr.next()){
	var dt1 = new GlideDateTime(ugr.begin);
	var dt2 = new GlideDateTime(ugr.end);
	var duration = new GlideDateTime.subtract(dt1,dt2);
	ugr.setValue('duration', duration);
	
	// Insert the record into the target table
	ugr.update();
}




]]></script>
        <sys_class_name>sys_script_fix</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-11-08 17:04:30</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>1f11c58397963110504978300153aff4</sys_id>
        <sys_mod_count>61</sys_mod_count>
        <sys_name>Splitting records</sys_name>
        <sys_package display_value="Outage-LV" source="x_1092147_outage_l">f210cc8397923110504978300153af06</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Outage-LV">f210cc8397923110504978300153af06</sys_scope>
        <sys_update_name>sys_script_fix_1f11c58397963110504978300153aff4</sys_update_name>
        <sys_updated_by>VelentL</sys_updated_by>
        <sys_updated_on>2023-11-15 13:25:47</sys_updated_on>
        <unloadable>false</unloadable>
    </sys_script_fix>
</record_update>
